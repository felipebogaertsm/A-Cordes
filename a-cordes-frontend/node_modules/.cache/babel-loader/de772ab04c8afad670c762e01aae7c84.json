{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\felip\\\\Dropbox\\\\Programs\\\\A-Cordes\\\\a-cordes-frontend\\\\src\\\\screens\\\\CartScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap';\nimport { Message } from '../components/Message';\nimport { addToCart } from '../actions/cartActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CartScreen({\n  match,\n  location,\n  history\n}) {\n  _s();\n\n  const productId = match.params.id; // Splitting the url at the = sign to find the quantity\n\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1;\n  const dispatch = useDispatch();\n  const cart = useSelector(state => state.cart);\n  const {\n    cartItems\n  } = cart;\n  console.log(cartItems);\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [dispatch, productId, qty]);\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 8,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Shopping Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CartScreen, \"1b/6BcrzFg90k2qO1tRu8krUc0E=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CartScreen;\nexport default CartScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartScreen\");","map":{"version":3,"sources":["C:/Users/felip/Dropbox/Programs/A-Cordes/a-cordes-frontend/src/screens/CartScreen.js"],"names":["React","useEffect","Link","useDispatch","useSelector","Row","Col","ListGroup","Image","Form","Button","Card","Message","addToCart","CartScreen","match","location","history","productId","params","id","qty","search","Number","split","dispatch","cart","state","cartItems","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,EAA8BC,KAA9B,EAAqCC,IAArC,EAA2CC,MAA3C,EAAmDC,IAAnD,QAA+D,iBAA/D;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,SAAT,QAA0B,wBAA1B;;;AAEA,SAASC,UAAT,CAAoB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAApB,EAAkD;AAAA;;AAC9C,QAAMC,SAAS,GAAGH,KAAK,CAACI,MAAN,CAAaC,EAA/B,CAD8C,CAG9C;;AACA,QAAMC,GAAG,GAAGL,QAAQ,CAACM,MAAT,GAAkBC,MAAM,CAACP,QAAQ,CAACM,MAAT,CAAgBE,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAD,CAAxB,GAA0D,CAAtE;AAEA,QAAMC,QAAQ,GAAGtB,WAAW,EAA5B;AAEA,QAAMuB,IAAI,GAAGtB,WAAW,CAACuB,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAgBF,IAAtB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AAEA3B,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIiB,SAAJ,EAAe;AACXO,MAAAA,QAAQ,CAACZ,SAAS,CAACK,SAAD,EAAYG,GAAZ,CAAV,CAAR;AACH;AACJ,GAJQ,EAIN,CAACI,QAAD,EAAWP,SAAX,EAAsBG,GAAtB,CAJM,CAAT;AAMA,sBACI,QAAC,GAAD;AAAA,4BACI,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GA3BQP,U;UAMYX,W,EAEJC,W;;;KARRU,U;AA6BT,eAAeA,UAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap';\r\nimport { Message } from '../components/Message';\r\nimport { addToCart } from '../actions/cartActions';\r\n\r\nfunction CartScreen({ match, location, history }) {\r\n    const productId = match.params.id;\r\n\r\n    // Splitting the url at the = sign to find the quantity\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const cart = useSelector(state => state.cart);\r\n    const { cartItems } = cart;\r\n    console.log(cartItems);\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty]);\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n            </Col>\r\n            <Col>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default CartScreen;\r\n"]},"metadata":{},"sourceType":"module"}