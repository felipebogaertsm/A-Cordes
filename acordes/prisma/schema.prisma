datasource db {
    url      = env("DATABASE_URL")
    provider = "postgresql"
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id              String            @id @default(uuid())
    email           String            @unique
    createdAt       DateTime          @default(now())
    SellerProfile   SellerProfile?
    Review          Review[]
    ShippingAddress ShippingAddress[]
    Order           Order[]
    OrderItem       OrderItem[]
    CartItem        CartItem[]
}

model SellerProfile {
    id          String    @id @default(uuid()) @map("_id")
    slug        String    @unique
    userId      String    @unique
    user        User      @relation(fields: [userId], references: [id])
    name        String
    picture     String?
    city        String?   @default("")
    country     String?   @default("")
    description String?   @default("")
    title       String?   @default("")
    isActive    Boolean   @default(false)
    createdAt   DateTime  @default(now()) @map("created_at")
    products    Product[]

    @@map("sellerprofile")
}

model Category {
    id        String    @id @default(uuid()) @map("_id")
    slug      String    @unique
    name      String    @unique
    createdAt DateTime  @default(now()) @map("created_at")
    products  Product[]

    @@map("category")
}

model Product {
    id              String         @id @default(uuid()) @map("_id")
    slug            String         @unique
    sellerProfile   SellerProfile  @relation(fields: [sellerProfileId], references: [id])
    sellerProfileId String
    name            String
    description     String?
    category        Category?      @relation(fields: [categoryId], references: [id])
    categoryId      String?
    price           Float          @default(0)
    countInStock    Int            @default(0)
    rating          Float?
    createdAt       DateTime       @default(now()) @map("created_at")
    images          ProductImage[]
    reviews         Review[]
    OrderItem       OrderItem[]
    CartItem        CartItem[]

    @@map("product")
}

model ProductImage {
    id        String  @id @default(uuid()) @map("_id")
    product   Product @relation(fields: [productId], references: [id])
    productId String
    src       String  @default("products/placeholder.jpeg")
    alt       String?

    createdAt DateTime @default(now()) @map("created_at")

    @@map("productimage")
}

model Review {
    id        String   @id @default(uuid()) @map("_id")
    product   Product? @relation(fields: [productId], references: [id])
    productId String?
    user      User?    @relation(fields: [userId], references: [id])
    userId    String?
    rating    Int?
    comment   String?

    createdAt DateTime @default(now()) @map("created_at")

    @@map("review")
}

model ShippingAddress {
    id         String   @id @default(uuid()) @map("_id")
    userId     String?
    user       User?    @relation(fields: [userId], references: [id])
    address    String   @default("")
    city       String   @default("")
    postalCode String   @default("") @map("postal_code")
    country    String   @default("")
    createdAt  DateTime @default(now()) @map("created_at")
    orders     Order[]

    @@map("shippingaddress")
}

model Order {
    id                String           @id @default(uuid()) @map("_id")
    userId            String?
    user              User?            @relation(fields: [userId], references: [id])
    paymentMethod     String?          @map("payment_method")
    shippingPrice     Float?           @map("shipping_price")
    totalPrice        Float            @default(0) @map("total_price")
    isPaid            Boolean          @default(false)
    paidAt            DateTime?        @map("paid_at")
    isDelivered       Boolean          @default(false)
    deliveredAt       DateTime?        @map("delivered_at")
    shippingAddress   ShippingAddress? @relation(fields: [shippingAddressId], references: [id])
    shippingAddressId String?
    createdAt         DateTime         @default(now()) @map("created_at")
    orderItems        OrderItem[]

    @@map("order")
}

model OrderItem {
    id        String   @id @default(uuid()) @map("_id")
    userId    String?
    user      User?    @relation(fields: [userId], references: [id])
    productId String?
    product   Product? @relation(fields: [productId], references: [id])
    orderId   String?
    order     Order?   @relation(fields: [orderId], references: [id])
    name      String?
    quantity  Int      @default(1)
    price     Float?
    taxPrice  Float    @default(0) @map("tax_price")
    image     String?

    createdAt DateTime @default(now()) @map("created_at")
}

model CartItem {
    id        String   @id @default(uuid()) @map("_id")
    userId    String
    user      User     @relation(fields: [userId], references: [id])
    productId String
    product   Product  @relation(fields: [productId], references: [id])
    quantity  Int      @default(1)
    createdAt DateTime @default(now()) @map("created_at")

    @@map("cartitem")
}
